{"ast":null,"code":"var _jsxFileName = \"/Users/Anuj/All My CS Projects/ai_movie_rec/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([{\n    title: '',\n    rating: 0\n  }, {\n    title: '',\n    rating: 0\n  }, {\n    rating: 1\n  } //default slider value\n  ]);\n\n  const [recommendations, setRecommendations] = useState('');\n  const [hasClickedRecommend, setHasClickedRecommend] = useState(false);\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/get-recommendations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        // You can send movie data to your backend if needed\n        // body: JSON.stringify({ movies: movies })\n        body: JSON.stringify({\n          movies: movies\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setRecommendations(data.recommendations);\n        setHasClickedRecommend(true);\n      } else {\n        console.error('Failed to retrieve recommendations');\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello AISC!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: index < 2 ?\n          /*#__PURE__*/\n          // Render only the first two inputs as text inputs\n          _jsxDEV(\"input\", {\n            placeholder: `Movie title ${index + 1}`,\n            value: movie.title,\n            onChange: e => handleInputChange(index, 'title', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this) :\n          /*#__PURE__*/\n          // Render the third input as a slider\n          _jsxDEV(\"input\", {\n            type: \"range\",\n            min: 1,\n            max: 1000,\n            value: movie.rating,\n            onChange: e => handleInputChange(index, 'rating', parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Get Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), hasClickedRecommend && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Based on your preferences, here are some more movie recommendations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recommendations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n  function handleInputChange(index, field, value) {\n    const newMovies = [...movies];\n    newMovies[index][field] = value;\n    setMovies(newMovies);\n  }\n  function handleStarClick(index, starNumber) {\n    handleInputChange(index, 'rating', starNumber);\n  }\n}\n_s(App, \"OBc/ij4dBvR2Fiab7i00yHnRpiQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","movies","setMovies","title","rating","recommendations","setRecommendations","hasClickedRecommend","setHasClickedRecommend","handleSubmit","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","map","movie","index","placeholder","value","onChange","handleInputChange","target","type","min","max","parseInt","onClick","field","newMovies","handleStarClick","starNumber","_c","$RefreshReg$"],"sources":["/Users/Anuj/All My CS Projects/ai_movie_rec/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([\n    { title: '', rating: 0 },\n    { title: '', rating: 0 },\n    { rating: 1} //default slider value\n  ]);\n  const [recommendations, setRecommendations] = useState('');\n  const [hasClickedRecommend, setHasClickedRecommend] = useState(false);\n\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/get-recommendations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        // You can send movie data to your backend if needed\n        // body: JSON.stringify({ movies: movies })\n        body: JSON.stringify({ movies: movies })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setRecommendations(data.recommendations);\n        setHasClickedRecommend(true);\n      } else {\n        console.error('Failed to retrieve recommendations');\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Hello AISC!</p>\n        <form onSubmit={e => e.preventDefault()}>\n          {movies.map((movie, index) => (\n            <div key={index}>\n            {index < 2 ? ( // Render only the first two inputs as text inputs\n              <input\n                placeholder={`Movie title ${index + 1}`}\n                value={movie.title}\n                onChange={(e) => handleInputChange(index, 'title', e.target.value)}\n              />\n            ) : (\n              // Render the third input as a slider\n              <input\n                type=\"range\"\n                min={1}\n                max={1000}\n                value={movie.rating}\n                onChange={(e) => handleInputChange(index, 'rating', parseInt(e.target.value))}\n              />\n            )}\n          </div>\n          ))}\n          <button onClick={handleSubmit}>Get Recommendations</button>\n        </form>\n\n        {hasClickedRecommend && (\n          <div>\n            <h2>Based on your preferences, here are some more movie recommendations:</h2>\n            <p>{recommendations}</p>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n\n  function handleInputChange(index, field, value) {\n    const newMovies = [...movies];\n    newMovies[index][field] = value;\n    setMovies(newMovies);\n  }\n\n  function handleStarClick(index, starNumber) {\n    handleInputChange(index, 'rating', starNumber);\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}